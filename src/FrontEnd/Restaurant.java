/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;

import BackEnd.DatabaseConnection;
import BackEnd.Order;
import BackEnd.Stock;
import BackEnd.TakeOrder;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.*;
import org.jfree.chart.plot.*;
import org.jfree.data.category.*;


/**
 *
 * @author Banele
 */
public class Restaurant extends javax.swing.JFrame {
    
    public final String username;
    public final String title;
    
    /**
     * Array that will store all the selected menu item/s. An item can only be
     * selected(True) or not selected(False) as I am using grouped radio buttons
     */
    public static TakeOrder[] selectedItem = new TakeOrder[12];
    
    
    // Creates new form Restaurant
    public Restaurant(String username, String title) {
        initComponents();
        this.username = username;
        this.title = title;
        lblLoginUser.setText(this.username);
        pnlOrderMenu.setVisible(true);
        pnlOrderBoard.setVisible(false);
        pnlStockReport.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        lblMinimiseForm = new javax.swing.JLabel();
        lblCloseForm = new javax.swing.JLabel();
        pnlLeftSide = new javax.swing.JPanel();
        btnOrderMenu = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnOrderBoard = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnStockReport = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnClearTable = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblLoginUser = new javax.swing.JLabel();
        pnlOrderMenu = new javax.swing.JPanel();
        btnPlaceOrder = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtOrderComment = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        rbtSteakMenu2 = new javax.swing.JRadioButton();
        rbtSteakMenu1 = new javax.swing.JRadioButton();
        rbtSteakMenu0 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        rbtBurgerMenu0 = new javax.swing.JRadioButton();
        rbtBurgerMenu1 = new javax.swing.JRadioButton();
        rbtBurgerMenu2 = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        rbtSeafoodMenu2 = new javax.swing.JRadioButton();
        rbtSeafoodMenu1 = new javax.swing.JRadioButton();
        rbtSeafoodMenu0 = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        rbtSaladMenu2 = new javax.swing.JRadioButton();
        rbtSaladMenu1 = new javax.swing.JRadioButton();
        rbtSaladMenu0 = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cmbTable = new javax.swing.JComboBox<>();
        pnlOrderBoard = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblCollectionOrder = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblInprogressOrder = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblOrderWithIssue = new javax.swing.JTable();
        pnlStockReport = new javax.swing.JPanel();
        pnlTwo = new javax.swing.JPanel();
        pnlOne = new javax.swing.JPanel();
        btnUpdateAllStock = new javax.swing.JButton();
        pnlClearTable = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Restaurant");
        setLocationByPlatform(true);
        setName("Restaurant"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        pnlMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMinimiseForm.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblMinimiseForm.setForeground(new java.awt.Color(255, 255, 255));
        lblMinimiseForm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinimiseForm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/minus (1).png"))); // NOI18N
        lblMinimiseForm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimiseFormMouseClicked(evt);
            }
        });
        pnlMain.add(lblMinimiseForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(932, 0, -1, 40));

        lblCloseForm.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblCloseForm.setForeground(new java.awt.Color(255, 255, 255));
        lblCloseForm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCloseForm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/x-button.png"))); // NOI18N
        lblCloseForm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseFormMouseClicked(evt);
            }
        });
        pnlMain.add(lblCloseForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(966, 0, -1, 40));

        pnlLeftSide.setBackground(new java.awt.Color(51, 204, 255));
        pnlLeftSide.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnOrderMenu.setBackground(new java.awt.Color(204, 255, 204));
        btnOrderMenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnOrderMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrderMenuMouseClicked(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/restaurant_table_48px.png"))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 1, 25)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 255));
        jLabel10.setText("ORDER MENU");

        javax.swing.GroupLayout btnOrderMenuLayout = new javax.swing.GroupLayout(btnOrderMenu);
        btnOrderMenu.setLayout(btnOrderMenuLayout);
        btnOrderMenuLayout.setHorizontalGroup(
            btnOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnOrderMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnOrderMenuLayout.setVerticalGroup(
            btnOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnOrderMenuLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(btnOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnOrderMenuLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );

        pnlLeftSide.add(btnOrderMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 270, -1));

        btnOrderBoard.setBackground(new java.awt.Color(51, 204, 255));
        btnOrderBoard.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnOrderBoard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrderBoardMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 25)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 255));
        jLabel7.setText("ORDER BOARD");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/waiter_48px.png"))); // NOI18N

        javax.swing.GroupLayout btnOrderBoardLayout = new javax.swing.GroupLayout(btnOrderBoard);
        btnOrderBoard.setLayout(btnOrderBoardLayout);
        btnOrderBoardLayout.setHorizontalGroup(
            btnOrderBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnOrderBoardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        btnOrderBoardLayout.setVerticalGroup(
            btnOrderBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnOrderBoardLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(btnOrderBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnOrderBoardLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnOrderBoardLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap())))
        );

        pnlLeftSide.add(btnOrderBoard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 270, -1));

        btnStockReport.setBackground(new java.awt.Color(51, 204, 255));
        btnStockReport.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnStockReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStockReportMouseClicked(evt);
            }
        });

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/bullish_48px.png"))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 1, 25)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 102, 255));
        jLabel16.setText("STORK/REPORT");

        javax.swing.GroupLayout btnStockReportLayout = new javax.swing.GroupLayout(btnStockReport);
        btnStockReport.setLayout(btnStockReportLayout);
        btnStockReportLayout.setHorizontalGroup(
            btnStockReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnStockReportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addContainerGap())
        );
        btnStockReportLayout.setVerticalGroup(
            btnStockReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnStockReportLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(btnStockReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnStockReportLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnStockReportLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(21, 21, 21))))
        );

        pnlLeftSide.add(btnStockReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 270, 80));

        btnClearTable.setBackground(new java.awt.Color(51, 204, 255));
        btnClearTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnClearTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearTableMouseClicked(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/buffet.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 25)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 255));
        jLabel4.setText("CLEAR TABLES");

        javax.swing.GroupLayout btnClearTableLayout = new javax.swing.GroupLayout(btnClearTable);
        btnClearTable.setLayout(btnClearTableLayout);
        btnClearTableLayout.setHorizontalGroup(
            btnClearTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnClearTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap())
        );
        btnClearTableLayout.setVerticalGroup(
            btnClearTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnClearTableLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnClearTableLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlLeftSide.add(btnClearTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 270, 80));
        pnlLeftSide.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 240, 17));

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("BM-JV");
        pnlLeftSide.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 110, -1));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Restaurant");
        pnlLeftSide.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        pnlMain.add(pnlLeftSide, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 600));

        lblLoginUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pnlMain.add(lblLoginUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(559, 14, 210, 20));

        btnPlaceOrder.setBackground(new java.awt.Color(0, 204, 255));
        btnPlaceOrder.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnPlaceOrder.setForeground(new java.awt.Color(0, 102, 255));
        btnPlaceOrder.setText("PLACE ORDER");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });

        txtOrderComment.setColumns(20);
        txtOrderComment.setLineWrap(true);
        txtOrderComment.setRows(5);
        txtOrderComment.setToolTipText("Comment");
        txtOrderComment.setWrapStyleWord(true);
        jScrollPane3.setViewportView(txtOrderComment);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 255, 255), 2, true), "Steak Menu", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 12), new java.awt.Color(0, 102, 255))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rbtSteakMenu2.setText("Grilled Steak with Black-Eyed Peas");
        rbtSteakMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSteakMenu2ActionPerformed(evt);
            }
        });
        jPanel2.add(rbtSteakMenu2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, -1));

        rbtSteakMenu1.setText("Steak and chips");
        rbtSteakMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSteakMenu1ActionPerformed(evt);
            }
        });
        jPanel2.add(rbtSteakMenu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, -1, -1));

        rbtSteakMenu0.setText("Big steak salad");
        rbtSteakMenu0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSteakMenu0ActionPerformed(evt);
            }
        });
        jPanel2.add(rbtSteakMenu0, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/steak_96px.png"))); // NOI18N
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 80));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 255, 255), 2, true), "Burger Menu", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 12), new java.awt.Color(0, 102, 255))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rbtBurgerMenu0.setText("Cheese burger");
        rbtBurgerMenu0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtBurgerMenu0ActionPerformed(evt);
            }
        });
        jPanel4.add(rbtBurgerMenu0, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        rbtBurgerMenu1.setText("Chicken burger");
        rbtBurgerMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtBurgerMenu1ActionPerformed(evt);
            }
        });
        jPanel4.add(rbtBurgerMenu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, -1, -1));

        rbtBurgerMenu2.setText("Beef burger");
        rbtBurgerMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtBurgerMenu2ActionPerformed(evt);
            }
        });
        jPanel4.add(rbtBurgerMenu2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/hamburger_96px.png"))); // NOI18N
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 90, 80));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 255, 255), 2, true), "Seafood Menu", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 12), new java.awt.Color(0, 102, 255))); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("with Garlic bread");
        jPanel6.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, 20));

        rbtSeafoodMenu2.setText("Shrimp & Crawfish fondeaux");
        rbtSeafoodMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSeafoodMenu2ActionPerformed(evt);
            }
        });
        jPanel6.add(rbtSeafoodMenu2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, -1, -1));

        rbtSeafoodMenu1.setText("Blue PIont Oysters");
        rbtSeafoodMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSeafoodMenu1ActionPerformed(evt);
            }
        });
        jPanel6.add(rbtSeafoodMenu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, -1, -1));

        rbtSeafoodMenu0.setText("Fried Calamari");
        rbtSeafoodMenu0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSeafoodMenu0ActionPerformed(evt);
            }
        });
        jPanel6.add(rbtSeafoodMenu0, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/prawn_96px.png"))); // NOI18N
        jPanel6.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 80, 80));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 255, 255), 2, true), "Salad Menu", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 12), new java.awt.Color(0, 102, 255))); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rbtSaladMenu2.setText("Garden salad");
        rbtSaladMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSaladMenu2ActionPerformed(evt);
            }
        });
        jPanel5.add(rbtSaladMenu2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, -1));

        rbtSaladMenu1.setText("Grilled chicken salad");
        rbtSaladMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSaladMenu1ActionPerformed(evt);
            }
        });
        jPanel5.add(rbtSaladMenu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, -1, -1));

        rbtSaladMenu0.setText("Ceaser salad");
        rbtSaladMenu0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtSaladMenu0ActionPerformed(evt);
            }
        });
        jPanel5.add(rbtSaladMenu0, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/lettuce_96px.png"))); // NOI18N
        jPanel5.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 70));

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 102, 255));
        jLabel14.setText("Select table");

        cmbTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Table 1", "Table 2", "Table 3", "Table 4", "Table 5" }));

        javax.swing.GroupLayout pnlOrderMenuLayout = new javax.swing.GroupLayout(pnlOrderMenu);
        pnlOrderMenu.setLayout(pnlOrderMenuLayout);
        pnlOrderMenuLayout.setHorizontalGroup(
            pnlOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrderMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPlaceOrder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(pnlOrderMenuLayout.createSequentialGroup()
                        .addGroup(pnlOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)))
                    .addGroup(pnlOrderMenuLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(31, 31, 31)
                        .addComponent(cmbTable, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlOrderMenuLayout.setVerticalGroup(
            pnlOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrderMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(19, 19, 19)
                .addGroup(pnlOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlOrderMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlMain.add(pnlOrderMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 730, 550));

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        tblCollectionOrder.setAutoCreateRowSorter(true);
        tblCollectionOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order id", "Table number", "Waiter name", "Order name", "Order status", "Order date", "Order bill"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCollectionOrder.setGridColor(new java.awt.Color(0, 102, 255));
        tblCollectionOrder.setIntercellSpacing(new java.awt.Dimension(3, 3));
        tblCollectionOrder.setSelectionBackground(new java.awt.Color(51, 204, 255));
        tblCollectionOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCollectionOrderMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblCollectionOrder);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Collect order", jPanel1);

        tblInprogressOrder.setAutoCreateRowSorter(true);
        tblInprogressOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order id", "Table number", "Waiter name", "Order name", "Order status", "Order date", "Order bill"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblInprogressOrder.setGridColor(new java.awt.Color(0, 102, 255));
        tblInprogressOrder.setIntercellSpacing(new java.awt.Dimension(3, 3));
        tblInprogressOrder.setSelectionBackground(new java.awt.Color(51, 204, 255));
        tblInprogressOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInprogressOrderMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblInprogressOrder);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("In progress order", jPanel7);

        tblOrderWithIssue.setAutoCreateRowSorter(true);
        tblOrderWithIssue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order id", "Table number", "Waiter name", "Order name", "Comment", "Order date", "Order bill"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrderWithIssue.setGridColor(new java.awt.Color(0, 102, 255));
        tblOrderWithIssue.setIntercellSpacing(new java.awt.Dimension(3, 3));
        tblOrderWithIssue.setSelectionBackground(new java.awt.Color(51, 204, 255));
        tblOrderWithIssue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrderWithIssueMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblOrderWithIssue);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Order with issue", jPanel9);

        javax.swing.GroupLayout pnlOrderBoardLayout = new javax.swing.GroupLayout(pnlOrderBoard);
        pnlOrderBoard.setLayout(pnlOrderBoardLayout);
        pnlOrderBoardLayout.setHorizontalGroup(
            pnlOrderBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        pnlOrderBoardLayout.setVerticalGroup(
            pnlOrderBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pnlMain.add(pnlOrderBoard, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 730, 550));

        pnlTwo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 255), 2, true));
        pnlTwo.setLayout(new javax.swing.BoxLayout(pnlTwo, javax.swing.BoxLayout.LINE_AXIS));

        pnlOne.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 255), 2, true));
        pnlOne.setLayout(new javax.swing.BoxLayout(pnlOne, javax.swing.BoxLayout.LINE_AXIS));

        btnUpdateAllStock.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdateAllStock.setText("UPDATE ALL STOCK");
        btnUpdateAllStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAllStockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStockReportLayout = new javax.swing.GroupLayout(pnlStockReport);
        pnlStockReport.setLayout(pnlStockReportLayout);
        pnlStockReportLayout.setHorizontalGroup(
            pnlStockReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStockReportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStockReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTwo, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
                    .addComponent(pnlOne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateAllStock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlStockReportLayout.setVerticalGroup(
            pnlStockReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStockReportLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(pnlOne, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateAllStock, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMain.add(pnlStockReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 730, 550));

        javax.swing.GroupLayout pnlClearTableLayout = new javax.swing.GroupLayout(pnlClearTable);
        pnlClearTable.setLayout(pnlClearTableLayout);
        pnlClearTableLayout.setHorizontalGroup(
            pnlClearTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 730, Short.MAX_VALUE)
        );
        pnlClearTableLayout.setVerticalGroup(
            pnlClearTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        pnlMain.add(pnlClearTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 730, 550));
        pnlMain.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 45, 730, 10));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1000, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblMinimiseFormMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimiseFormMouseClicked
        // Minimise code
        this.setState(LoginForm.ICONIFIED);
    }//GEN-LAST:event_lblMinimiseFormMouseClicked

    private void lblCloseFormMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseFormMouseClicked
        // Close or terminate program
        System.exit(0);
    }//GEN-LAST:event_lblCloseFormMouseClicked

    private void btnOrderMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrderMenuMouseClicked
        // Change color once selected
        setColour(btnOrderMenu);
        resetColour(btnOrderBoard);
        resetColour(btnClearTable);
        resetColour(btnStockReport);
        
        pnlOrderMenu.setVisible(true);
        pnlOrderBoard.setVisible(false);
        pnlStockReport.setVisible(false);
        pnlClearTable.setVisible(false);
    }//GEN-LAST:event_btnOrderMenuMouseClicked

    private void btnOrderBoardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrderBoardMouseClicked
        // Change color once selected
        setColour(btnOrderBoard);
        resetColour(btnOrderMenu);
        resetColour(btnClearTable);
        resetColour(btnStockReport);
        
        pnlOrderMenu.setVisible(false);
        pnlOrderBoard.setVisible(true);
        pnlStockReport.setVisible(false);
        pnlClearTable.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) tblCollectionOrder.getModel();
        //The below code will clear the table everytime new information is displayed
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        tblCollectionOrder.revalidate();
        ArrayList<Order> orderData = DatabaseConnection.selectAllOrders();
        for(int a = 0; a < orderData.size(); a++){
            int order_id = orderData.get(a).getOrder_id();
            //String comment = orderData.get(a).getComment();
            String order_name = orderData.get(a).getOrder_name();
            String table_name = orderData.get(a).getTable_name();
            String waiter_name = orderData.get(a).getWaiter_name();
            String order_status = orderData.get(a).getOrder_status();
            String order_date = orderData.get(a).getOrder_date();
            double order_bill = orderData.get(a).getOrder_bill();
            if(order_status.equalsIgnoreCase("Collect")){
                model.addRow(new Object[]{order_id, table_name, waiter_name, order_name, order_status, order_date, "R "+order_bill});
            }
        }
    }//GEN-LAST:event_btnOrderBoardMouseClicked

    private void btnClearTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearTableMouseClicked
        // Change color once selected
        setColour(btnClearTable);
        resetColour(btnOrderMenu);
        resetColour(btnOrderBoard);
        resetColour(btnStockReport);
        
        pnlOrderMenu.setVisible(false);
        pnlOrderBoard.setVisible(false);
        pnlStockReport.setVisible(false);
        pnlClearTable.setVisible(true);
    }//GEN-LAST:event_btnClearTableMouseClicked

    private void rbtSteakMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSteakMenu1ActionPerformed
        // check if the array index has not been initialised
        int arrayIndex = 1;
        getSelectedItem(arrayIndex, rbtSteakMenu1);
    }//GEN-LAST:event_rbtSteakMenu1ActionPerformed

    private void rbtSteakMenu0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSteakMenu0ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 0;
        getSelectedItem(arrayIndex, rbtSteakMenu0);
    }//GEN-LAST:event_rbtSteakMenu0ActionPerformed

    private void rbtBurgerMenu0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtBurgerMenu0ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 3;
        getSelectedItem(arrayIndex, rbtBurgerMenu0);
    }//GEN-LAST:event_rbtBurgerMenu0ActionPerformed

    private void rbtBurgerMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtBurgerMenu1ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 4;
        getSelectedItem(arrayIndex, rbtBurgerMenu1);
    }//GEN-LAST:event_rbtBurgerMenu1ActionPerformed

    private void rbtSeafoodMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSeafoodMenu1ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 7;
        getSelectedItem(arrayIndex, rbtSeafoodMenu1);
    }//GEN-LAST:event_rbtSeafoodMenu1ActionPerformed

    private void rbtSeafoodMenu0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSeafoodMenu0ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 6;
        getSelectedItem(arrayIndex, rbtSeafoodMenu0);
    }//GEN-LAST:event_rbtSeafoodMenu0ActionPerformed

    private void rbtSaladMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSaladMenu1ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 10;
        getSelectedItem(arrayIndex, rbtSaladMenu1);
    }//GEN-LAST:event_rbtSaladMenu1ActionPerformed

    private void rbtSaladMenu0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSaladMenu0ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 9;
        getSelectedItem(arrayIndex, rbtSaladMenu0);
    }//GEN-LAST:event_rbtSaladMenu0ActionPerformed

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        // button to place an order
        String orderComment = txtOrderComment.getText();
        String selectedTable = (String)cmbTable.getSelectedItem();
        String waiterName = username;
        // Creating a date stamp for the order
        Date dt = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String date = formatter.format(dt);
        Calendar c = Calendar.getInstance();
        /**
         * This condition will check if the combobox has any items(tables) left
         * if there is nothing that means all the tables are occupied.
         * There will be an error messsage saying all tables are occupied
         */
        if(cmbTable.getItemCount() != 0){
            //check if there is any comment in the txtOrderComment text box.
            if (orderComment.length() > 0) {
                for (int a = 0; a < selectedItem.length; a++) {
                    if (selectedItem[a] == null) {
                        continue;
                    }
                    if (selectedItem[a].isSelectedRadioButtonItem()) {
                        updateStockForSelectedMenuName(a);
                    }
                    DatabaseConnection.insertOrderDetails(orderComment, selectedItem[a].getOrder_name(), selectedTable, waiterName, "New", Double.parseDouble(String.format( "%.2f",  1.0 + (Math.random() * (2000.00 - 1.0)))), date);
                }
                DatabaseConnection.insertTableDetails("Occupied", selectedTable, waiterName);
                cmbTable.removeItemAt(cmbTable.getSelectedIndex()); // removing the table in the list since it is occupied
            } else {// If there is no comment in the txtOrderComment text box
                orderComment = "No special comment";
                for (int a = 0; a < selectedItem.length; a++) {
                    if (selectedItem[a] == null) {
                        continue;
                    }
                    if (selectedItem[a].isSelectedRadioButtonItem()) {
                        updateStockForSelectedMenuName(a);
                    }
                    DatabaseConnection.insertOrderDetails(orderComment, selectedItem[a].getOrder_name(), selectedTable, waiterName, "In-progress", Double.parseDouble(String.format( "%.2f",  1.0 + (Math.random() * (2000.00 - 1.0)))), date);
                }
                DatabaseConnection.insertTableDetails("Occupied", selectedTable, waiterName);
                cmbTable.removeItemAt(cmbTable.getSelectedIndex()); // removing the table in the list since it is occupied
            }
        }else{
            JOptionPane.showMessageDialog(null,"Apologies!!\nAll tables are fully occupied.\nPlease wait for the next empty table", "Warning", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    private void rbtSteakMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSteakMenu2ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 2;
        getSelectedItem(arrayIndex, rbtSteakMenu2);
    }//GEN-LAST:event_rbtSteakMenu2ActionPerformed

    private void rbtBurgerMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtBurgerMenu2ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 5;
        getSelectedItem(arrayIndex, rbtBurgerMenu2);
    }//GEN-LAST:event_rbtBurgerMenu2ActionPerformed

    private void rbtSeafoodMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSeafoodMenu2ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 8;
        if (rbtSeafoodMenu2.isSelected()){
            selectedItem[arrayIndex] = new TakeOrder(rbtSeafoodMenu2.isSelected(), rbtSeafoodMenu2.getText()+ " with Garlic bread");
        }else{
            selectedItem[arrayIndex] = new TakeOrder(rbtSeafoodMenu2.isSelected(), rbtSeafoodMenu2.getText()+" with Garlic bread");
        }
    }//GEN-LAST:event_rbtSeafoodMenu2ActionPerformed

    private void rbtSaladMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtSaladMenu2ActionPerformed
        // TODO add your handling code here:
        int arrayIndex = 11;
        getSelectedItem(arrayIndex, rbtSaladMenu2);
    }//GEN-LAST:event_rbtSaladMenu2ActionPerformed

    private void btnUpdateAllStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAllStockActionPerformed
        // Update all stock:
        DatabaseConnection.resetStock();
        displayStockData();
    }//GEN-LAST:event_btnUpdateAllStockActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // Defining each table's model
        DefaultTableModel collectOrderModel = (DefaultTableModel) tblCollectionOrder.getModel();
        DefaultTableModel inprogressOrderModel = (DefaultTableModel) tblInprogressOrder.getModel();
        DefaultTableModel orderWithIssueModel = (DefaultTableModel) tblOrderWithIssue.getModel();
        //The below code will clear the table everytime new information is displayed
        collectOrderModel.getDataVector().removeAllElements();
        inprogressOrderModel.getDataVector().removeAllElements();
        orderWithIssueModel.getDataVector().removeAllElements();
        collectOrderModel.fireTableDataChanged();
        inprogressOrderModel.fireTableDataChanged();
        orderWithIssueModel.fireTableDataChanged();
        tblCollectionOrder.revalidate();
        tblInprogressOrder.revalidate();
        tblOrderWithIssue.revalidate();
        ArrayList<Order> orderData = DatabaseConnection.selectAllOrders();
        // ArrayList<Stock> stockData = DatabaseConnection.selectAllStock();
        // ArrayList<Table> tableData = DatabaseConnection.selectAllTables();
        // Display all orders that must be collected in order to be served
        for (int a = 0; a < orderData.size(); a++) {
            int order_id = orderData.get(a).getOrder_id();
            //String comment = orderData.get(a).getComment();
            String order_name = orderData.get(a).getOrder_name();
            String table_name = orderData.get(a).getTable_name();
            String waiter_name = orderData.get(a).getWaiter_name();
            String order_status = orderData.get(a).getOrder_status();
            String order_date = orderData.get(a).getOrder_date();
            double order_bill = orderData.get(a).getOrder_bill();
            if (order_status.equalsIgnoreCase("Collect")) {
                collectOrderModel.addRow(new Object[]{order_id, table_name, waiter_name, order_name, order_status, order_date, "R " + order_bill});
            }
        }

        // Display all the orders
        for (int a = 0; a < orderData.size(); a++) {
            int order_id = orderData.get(a).getOrder_id();
            //String comment = orderData.get(a).getComment();
            String order_name = orderData.get(a).getOrder_name();
            String table_name = orderData.get(a).getTable_name();
            String waiter_name = orderData.get(a).getWaiter_name();
            String order_status = orderData.get(a).getOrder_status();
            String order_date = orderData.get(a).getOrder_date();
            double order_bill = orderData.get(a).getOrder_bill();
            if (order_status.equalsIgnoreCase("In-progress")) {
                inprogressOrderModel.addRow(new Object[]{order_id, table_name, waiter_name, order_name, order_status, order_date, "R " + order_bill});
            }
        }
        
        // Display all orders with issues/problems
        for (int a = 0; a < orderData.size(); a++) {
            int order_id = orderData.get(a).getOrder_id();
            String comment = orderData.get(a).getComment();
            String order_name = orderData.get(a).getOrder_name();
            String table_name = orderData.get(a).getTable_name();
            String waiter_name = orderData.get(a).getWaiter_name();
            String order_status = orderData.get(a).getOrder_status();
            String order_date = orderData.get(a).getOrder_date();
            double order_bill = orderData.get(a).getOrder_bill();
            if (order_status.equalsIgnoreCase("Issue")) {
                orderWithIssueModel.addRow(new Object[]{order_id, table_name, waiter_name, order_name, comment, order_date, "R " + order_bill});
            }
        }
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void tblInprogressOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInprogressOrderMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblInprogressModel = (DefaultTableModel) tblInprogressOrder.getModel();
        String order_id = tblInprogressModel.getValueAt(tblInprogressOrder.getSelectedRow(), 0).toString();
        String table_name = tblInprogressModel.getValueAt(tblInprogressOrder.getSelectedRow(), 1).toString();
        String waiter_name = tblInprogressModel.getValueAt(tblInprogressOrder.getSelectedRow(), 2).toString();
        String order_name = tblInprogressModel.getValueAt(tblInprogressOrder.getSelectedRow(), 3).toString();
        String order_status = tblInprogressModel.getValueAt(tblInprogressOrder.getSelectedRow(), 4).toString();
        String order_date = tblInprogressModel.getValueAt(tblInprogressOrder.getSelectedRow(), 5).toString();
        String order_bill = tblInprogressModel.getValueAt(tblInprogressOrder.getSelectedRow(), 6).toString();
        String comment = "";
        new OrderStatus(order_id, table_name, waiter_name, order_name, order_status, comment, order_date, order_bill).setVisible(true);
        tblInprogressOrder.remove(tblInprogressOrder.getSelectedRow());
    }//GEN-LAST:event_tblInprogressOrderMouseClicked

    private void tblCollectionOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCollectionOrderMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblCollectionOrderModel = (DefaultTableModel) tblCollectionOrder.getModel();
        String order_id = tblCollectionOrderModel.getValueAt(tblCollectionOrder.getSelectedRow(), 0).toString();
        String table_name = tblCollectionOrderModel.getValueAt(tblCollectionOrder.getSelectedRow(), 1).toString();
        String waiter_name = tblCollectionOrderModel.getValueAt(tblCollectionOrder.getSelectedRow(), 2).toString();
        String order_name = tblCollectionOrderModel.getValueAt(tblCollectionOrder.getSelectedRow(), 3).toString();
        String order_status = tblCollectionOrderModel.getValueAt(tblCollectionOrder.getSelectedRow(), 4).toString();
        String order_date = tblCollectionOrderModel.getValueAt(tblCollectionOrder.getSelectedRow(), 5).toString();
        String order_bill = tblCollectionOrderModel.getValueAt(tblCollectionOrder.getSelectedRow(), 6).toString();
        String comment = "";
        new OrderStatus(order_id, table_name, waiter_name, order_name, order_status, comment, order_date, order_bill).setVisible(true);
        tblCollectionOrder.remove(tblCollectionOrder.getSelectedRow());
    }//GEN-LAST:event_tblCollectionOrderMouseClicked

    private void tblOrderWithIssueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderWithIssueMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblOrderWithIssueModel = (DefaultTableModel) tblOrderWithIssue.getModel();
        String order_id = tblOrderWithIssueModel.getValueAt(tblOrderWithIssue.getSelectedRow(), 0).toString();
        String table_name = tblOrderWithIssueModel.getValueAt(tblOrderWithIssue.getSelectedRow(), 1).toString();
        String waiter_name = tblOrderWithIssueModel.getValueAt(tblOrderWithIssue.getSelectedRow(), 2).toString();
        String order_name = tblOrderWithIssueModel.getValueAt(tblOrderWithIssue.getSelectedRow(), 3).toString();
        String order_status = "Issue";
        String order_date = tblOrderWithIssueModel.getValueAt(tblOrderWithIssue.getSelectedRow(), 5).toString();
        String order_bill = tblOrderWithIssueModel.getValueAt(tblOrderWithIssue.getSelectedRow(), 6).toString();
        String comment = tblOrderWithIssueModel.getValueAt(tblOrderWithIssue.getSelectedRow(), 4).toString();
        new OrderStatus(order_id, table_name, waiter_name, order_name, order_status, comment, order_date, order_bill).setVisible(true);
        tblOrderWithIssue.remove(tblOrderWithIssue.getSelectedRow());
    }//GEN-LAST:event_tblOrderWithIssueMouseClicked

    private void btnStockReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockReportMouseClicked
        // TODO add your handling code here:
        setColour(btnStockReport);
        resetColour(btnOrderMenu);
        resetColour(btnOrderBoard);
        resetColour(btnClearTable);
        
        pnlOrderMenu.setVisible(false);
        pnlOrderBoard.setVisible(false);
        pnlStockReport.setVisible(true);
        pnlClearTable.setVisible(false);

        displayStockData();
    }//GEN-LAST:event_btnStockReportMouseClicked

    void setColour(JPanel panel){
        panel.setBackground(new Color(204,255,204));
    }
    
    void resetColour(JPanel panel){
        panel.setBackground(new Color(51,204,255));
    }
    
    public void getSelectedItem(int arrayIndex, JRadioButton rbtItemSelected){
        if (rbtItemSelected.isSelected()){
            selectedItem[arrayIndex] = new TakeOrder(rbtItemSelected.isSelected(), rbtItemSelected.getText());
        }else{
            selectedItem[arrayIndex] = new TakeOrder(rbtItemSelected.isSelected(), rbtItemSelected.getText());
        }
    }
    
    public void updateStockForSelectedMenuName(int a){
        switch (a) {
            case 0:
                // These are all the items that make up the 'Big steak salad' food
                String bigSteakSalad[] = {"Beef", "Roma tomatoes", "Lettuce", "Black pepper", "Red onion", "White cheese"};
                DatabaseConnection.updateStock(bigSteakSalad);
                break;
            case 1:
                // These are all the items that make up the 'Steak and chips' food
                String steakAndChips[] = {"Beef", "Potatoes"};
                DatabaseConnection.updateStock(steakAndChips);
                break;
            case 2:

                break;
            case 3:
                // These are all the items that make up the 'Cheese burger' food
                String cheeseBurger[] = {"Cheese", "Beef patty", "Lettuce", "Tomatoe", "Onion"};
                DatabaseConnection.updateStock(cheeseBurger);
                break;
            case 4:
                // These are all the items that make up the 'Chicken burger' food
                String chickenBurger[] = {"Chicken patty", "Lettuce", "Tomatoe", "Onion"};
                DatabaseConnection.updateStock(chickenBurger);
                break;
            case 5:
                // These are all the items that make up the 'Beef burger' food
                String beefBurger[] = {"Beef patty", "Lettuce", "Tomatoe", "Onion"};
                DatabaseConnection.updateStock(beefBurger);
                break;
            case 6:
                // These are all the items that make up the 'Fried Calamari' food
                String friedCalamari[] = {"Calamari", "Canola oil", "Flour"};
                DatabaseConnection.updateStock(friedCalamari);
                break;
            case 7:
                // These are all the items that make up the 'Blue point Oysters' food
                String bluePointOysters[] = {"Blue point Oysters", "Lemon"};
                DatabaseConnection.updateStock(bluePointOysters);
                break;
            case 8:
                // These are all the items that make up the 'Shrimp & Crawfish fondeaux with Garlic break' food
                String shrimpAndCrawfishFondeauxWithGarlicBread[] = {"Shrimp", "Crawfish", "Garlic bread"};
                DatabaseConnection.updateStock(shrimpAndCrawfishFondeauxWithGarlicBread);
                break;
            case 9:
                // These are all the items that make up the 'Ceaser salad' food
                String ceaserSalad[] = {"Parmesan cheese", "Croutons", "Romaine lettuce", "Caesar dressing"};
                DatabaseConnection.updateStock(ceaserSalad);
                break;
            case 10:
                // These are all the items that make up the 'Grilled chicken salad' food
                String grilledChickenSalad[] = {"Green leaf lettuce", "Red leaf lettuce", "Roma tomatoes", "Red onion", "Carrot", "Crouton", "Cucumber", "Chicken breast"};
                DatabaseConnection.updateStock(grilledChickenSalad);
                break;
            case 11:
                // These are all the items that make up the 'Garden salad' food
                String gardenSalad[] = {"Green leaf lettuce", "Red leaf lettuce", "Romaine lettuce", "Red onion", "Crouton", "Cucumber", "Roma tomatoes"};
                DatabaseConnection.updateStock(gardenSalad);
                break;
        }
    }
    
    public void displayStockData(){
        pnlOrderMenu.setVisible(false);
        pnlOrderBoard.setVisible(false);
        pnlStockReport.setVisible(true);
        
        ArrayList<Stock> stockData = DatabaseConnection.selectAllStock();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int i = 0; i < stockData.size() - 15; i++) {
            dataset.setValue(stockData.get(i).getUsage(), "Used stock (%)", stockData.get(i).getItemName());
        }
        JFreeChart jchart = ChartFactory.createBarChart("Stock report", "Product", "Stock used(%)", dataset, PlotOrientation.VERTICAL, true, true, false);
        DefaultCategoryDataset dataset1 = new DefaultCategoryDataset();
        for (int a = 14; a < stockData.size(); a++) {
            dataset1.setValue(stockData.get(a).getUsage(), "Used stock (%)", stockData.get(a).getItemName());
        }
        JFreeChart jchart1 = ChartFactory.createBarChart("Stock report", "Product", "Stock used(%)", dataset1, PlotOrientation.VERTICAL, true, true, false);
        CategoryPlot plot = jchart.getCategoryPlot();
        CategoryPlot plot1 = jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.BLUE);
        plot1.setRangeGridlinePaint(Color.BLUE);
        ChartPanel chartPanel = new ChartPanel(jchart);
        ChartPanel chartPanel1 = new ChartPanel(jchart1);
        pnlOne.removeAll();
        pnlTwo.removeAll();
        pnlOne.add(chartPanel);
        pnlTwo.add(chartPanel1);
        pnlOne.updateUI();
        pnlTwo.updateUI();
    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
////            "javax.swing.plaf.metal.MetalLookAndFeel"
////            "com.sun.java.swing.plaf.motif.MotifLookAndFeel"
////            "com.sun.java.swing.plaf.windows.WindowsLookAndFeel"
////            "com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel"
////            "javax.swing.plaf.metal.MetalLookAndFeel"
////            "com.sun.java.swing.plaf.nimbus.NimbusLokkAndFeel"
////            "com.sun.java.swing.plaf.windows.WindowsLookAndFeel"
////            "com.seaglasslookandfeel.SeaGlassLookAndFeel"
////            
////            "com.birosoft.liquid.LiquidLookAndFeel"
//            String className = "com.alee.laf.WebLookAndFeel";
//            UIManager.setLookAndFeel(className);
////            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
////                if ("Nimbus".equals(info.getName())) {
////                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
////                    break;
////                }
////            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Restaurant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Restaurant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Restaurant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Restaurant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Restaurant("Jacob", "Waiter").setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnClearTable;
    private javax.swing.JPanel btnOrderBoard;
    private javax.swing.JPanel btnOrderMenu;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JPanel btnStockReport;
    private javax.swing.JButton btnUpdateAllStock;
    private javax.swing.JComboBox<String> cmbTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCloseForm;
    private javax.swing.JLabel lblLoginUser;
    private javax.swing.JLabel lblMinimiseForm;
    private javax.swing.JPanel pnlClearTable;
    private javax.swing.JPanel pnlLeftSide;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlOne;
    private javax.swing.JPanel pnlOrderBoard;
    private javax.swing.JPanel pnlOrderMenu;
    private javax.swing.JPanel pnlStockReport;
    private javax.swing.JPanel pnlTwo;
    private javax.swing.JRadioButton rbtBurgerMenu0;
    private javax.swing.JRadioButton rbtBurgerMenu1;
    private javax.swing.JRadioButton rbtBurgerMenu2;
    private javax.swing.JRadioButton rbtSaladMenu0;
    private javax.swing.JRadioButton rbtSaladMenu1;
    private javax.swing.JRadioButton rbtSaladMenu2;
    private javax.swing.JRadioButton rbtSeafoodMenu0;
    private javax.swing.JRadioButton rbtSeafoodMenu1;
    private javax.swing.JRadioButton rbtSeafoodMenu2;
    private javax.swing.JRadioButton rbtSteakMenu0;
    private javax.swing.JRadioButton rbtSteakMenu1;
    private javax.swing.JRadioButton rbtSteakMenu2;
    private javax.swing.JTable tblCollectionOrder;
    private javax.swing.JTable tblInprogressOrder;
    private javax.swing.JTable tblOrderWithIssue;
    private javax.swing.JTextArea txtOrderComment;
    // End of variables declaration//GEN-END:variables
}
